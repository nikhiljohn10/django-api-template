#!/bin/bash

ROOT_DIR=$(pwd)
APP_NAME=$(basename $ROOT_DIR)
APP_DIR=$(cd -P -- $ROOT_DIR/app 2>/dev/null && pwd)
BIN_DIR=$HOME/.django/$APP_NAME/bin
BIN_FILE=$BIN_DIR/api

_venv_init () {
	if [ ! -d "$APP_DIR/venv" ]; then
		printf "Do you wish to enable virtual environment for pip packages?(y/N): "
		read confirmation
		confirmation=$(echo $confirmation | tr '[:upper:]' '[:lower:]')
		case $confirmation in
			y | yes ) python3 -m venv $APP_DIR/venv;;
			* ) echo "Python venv not installed"; return 1;;
		esac
	fi
	\. $APP_DIR/venv/bin/activate
}

_build_api_bin () {
	[ ! -d "$BIN_DIR" ] && \
		mkdir -p $BIN_DIR
	cp -f $APP_DIR/bin/lib $BIN_FILE
	sed -i "3iAPP_DIR=$APP_DIR" $BIN_FILE
	sed -i "3iROOT_DIR=$ROOT_DIR" $BIN_FILE
	chmod +x $BIN_FILE
}

_api_install () {
	[ ! -f $BIN_FILE ] && \
		_build_api_bin && \
		echo "API Manager installed for $APP_NAME" || \
		echo "API Manager for $APP_NAME exist"
}

_env_init () {
	export ROOT_DIR=$ROOT_DIR
	export APP_DIR=$APP_DIR
	alias manage='python '$APP_DIR'/manage.py'
	complete -W 'clean install migrate setup demo run deploy help' api
}

deact () {
	[ "$_OLD_VIRTUAL_PS1" != "" ] && deactivate && unalias manage
}

if [ "$APP_DIR" != "" ]; then
	_venv_init && \
	_api_install && \
	_env_init && \
	echo $BIN_FILE && \
	\. $BIN_FILE && \
	_install_deps && \
	_config_env && \
	_migrate_db && \
	_load_data && \
	echo "API Server successfully setup" && \
	_api_help || \
	echo "API Server setup was unsuccessful"
else
	echo "App not found in the currect directory"
fi